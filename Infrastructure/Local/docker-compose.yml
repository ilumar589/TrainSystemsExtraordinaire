version: "3.9"

networks:
  pgnet:

volumes:
  primary_data:
  replica1_data:
  replica2_data:

services:
  # ---------- PostgreSQL PRIMARY (managed by repmgr) ----------
  postgresql-primary:
    image: bitnami/postgresql-repmgr:16
    container_name: postgresql-primary
    restart: unless-stopped
    networks: [pgnet]
    ports:
      - "5432:5432"
    environment:
      # App DB/user
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=adminpass
      - POSTGRESQL_DATABASE=appdb
      # Superuser
      - POSTGRESQL_POSTGRES_PASSWORD=postgrespass
      # repmgr cluster settings
      - REPMGR_PRIMARY_ROLE_WAIT_FOR_SYNC=yes
      - REPMGR_PASSWORD=repmgrpass
      - REPMGR_PORT_NUMBER=5432
      - REPMGR_PRIMARY_HOST=postgresql-primary        # REQUIRED on primary too
      - REPMGR_NODE_NAME=primary-0                    # Must match ^.*+-[0-9]+$
      - REPMGR_NODE_NETWORK_NAME=postgresql-primary
      - REPMGR_PARTNER_NODES=postgresql-primary,postgresql-replica1,postgresql-replica2
      - REPMGR_LOG_LEVEL=NOTICE
    volumes:
      - primary_data:/bitnami/postgresql
    healthcheck:
      test: ["CMD", "bash", "-lc", "pg_isready -U postgres -d appdb -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 30

  # ---------- PostgreSQL REPLICA #1 ----------
  postgresql-replica1:
    image: bitnami/postgresql-repmgr:16
    container_name: postgresql-replica1
    restart: unless-stopped
    networks: [pgnet]
    depends_on:
      - postgresql-primary
    ports:
      - "5433:5432"
    environment:
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=adminpass
      - POSTGRESQL_DATABASE=appdb
      - POSTGRESQL_POSTGRES_PASSWORD=postgrespass
      - REPMGR_PASSWORD=repmgrpass
      - REPMGR_PORT_NUMBER=5432
      - REPMGR_PRIMARY_HOST=postgresql-primary
      - REPMGR_NODE_NAME=replica-1
      - REPMGR_NODE_NETWORK_NAME=postgresql-replica1
      - REPMGR_PARTNER_NODES=postgresql-primary,postgresql-replica1,postgresql-replica2
    volumes:
      - replica1_data:/bitnami/postgresql
    healthcheck:
      test: ["CMD", "bash", "-lc", "pg_isready -U postgres -d appdb -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 30

  # ---------- PostgreSQL REPLICA #2 ----------
  postgresql-replica2:
    image: bitnami/postgresql-repmgr:16
    container_name: postgresql-replica2
    restart: unless-stopped
    networks: [pgnet]
    depends_on:
      - postgresql-primary
    ports:
      - "5434:5432"
    environment:
      - POSTGRESQL_USERNAME=admin
      - POSTGRESQL_PASSWORD=adminpass
      - POSTGRESQL_DATABASE=appdb
      - POSTGRESQL_POSTGRES_PASSWORD=postgrespass
      - REPMGR_PASSWORD=repmgrpass
      - REPMGR_PORT_NUMBER=5432
      - REPMGR_PRIMARY_HOST=postgresql-primary
      - REPMGR_NODE_NAME=replica-2
      - REPMGR_NODE_NETWORK_NAME=postgresql-replica2
      - REPMGR_PARTNER_NODES=postgresql-primary,postgresql-replica1,postgresql-replica2
    volumes:
      - replica2_data:/bitnami/postgresql
    healthcheck:
      test: ["CMD", "bash", "-lc", "pg_isready -U postgres -d appdb -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 30

  # ---------- PGPOOL-II (read/write split + health checks) ----------
  pgpool:
    image: bitnami/pgpool:4
    container_name: pgpool
    restart: unless-stopped
    networks: [pgnet]
    depends_on:
      - postgresql-primary
      - postgresql-replica1
      - postgresql-replica2
    ports:
      - "9999:5432"   # connect your app/psql here
    environment:
      # Backend list: id:host:port
      - PGPOOL_BACKEND_NODES=0:postgresql-primary:5432,1:postgresql-replica1:5432,2:postgresql-replica2:5432
      # Pgpool auth towards Postgres
      - PGPOOL_POSTGRES_USERNAME=admin
      - PGPOOL_POSTGRES_PASSWORD=adminpass
      # Streaming replication health checks
      - PGPOOL_SR_CHECK_USER=postgres
      - PGPOOL_SR_CHECK_PASSWORD=postgrespass
      - PGPOOL_SR_CHECK_DATABASE=postgres
      # Load balancing & failover
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
      - PGPOOL_NUM_INIT_CHILDREN=64
      - PGPOOL_HEALTH_CHECK_PERIOD=5
      - PGPOOL_HEALTH_CHECK_TIMEOUT=3
      - PGPOOL_FAILOVER_ON_BACKEND_ERROR=yes
      - PGPOOL_ENABLE_AUTO_FAILOVER=yes
      # (Optional) watchdog in a single-node Pgpool: enabled for consistency
      - PGPOOL_ENABLE_WATCHDOG=yes
      - PGPOOL_WD_HEARTBEAT_MODE=heartbeat
      - PGPOOL_WD_HEARTBEAT_PORT0=9694
      - PGPOOL_DELEGATE_IP=pgpool
      # Admin console
      - PGPOOL_ADMIN_USERNAME=pgpooladmin
      - PGPOOL_ADMIN_PASSWORD=pgpoolpass
    healthcheck:
      test: ["CMD", "bash", "-lc", "pgpool --version >/dev/null && psql -h 127.0.0.1 -p 5432 -U admin -d appdb -c 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30

